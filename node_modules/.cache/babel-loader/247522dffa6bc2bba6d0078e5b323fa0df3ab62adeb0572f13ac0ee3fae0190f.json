{"ast":null,"code":"var _jsxFileName = \"/Users/shulinzhang/my-react-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './mySurvey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteColor() {\n  _s();\n  const createfeed = (comments, rating) => {\n    const feed = {\n      comments: comments,\n      rating: rating\n    };\n    return feed;\n  };\n  const [inputValue, setInputValue] = useState('');\n  const [inputValues, setInputValues] = useState([]);\n  const [rating, setRating] = useState(0);\n\n  // Define the API URL you want to fetch data from\n  const apiUrlGet = 'http://localhost:3500/getRating';\n\n  // Define a function to fetch and update the data\n  const fetchData = async () => {\n    alert(\"effct triggered now\");\n    axios.get(apiUrlGet).then(response => {\n      const data = response.json();\n      setInputValues(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n  const handleStarClick = selectedRating => {\n    alert(\"rating\" + selectedRating);\n    setRating(selectedRating);\n  };\n  const handleNewComments = () => {\n    var feed = createfeed(inputValue, rating);\n    setInputValues(prevItems => [...prevItems, feed]);\n    setInputValue('');\n    setRating(0);\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value); // Update the state with the input value\n  };\n\n  const renderStars = numStars => {\n    const starSymbol = '★'; // Unicode star character\n    const stars = starSymbol.repeat(numStars);\n    return stars;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [inputValues.map((x, index) => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"star selected\",\n        children: renderStars(x.rating)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, this), x.comments]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNewComments,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter your comments:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          cols: \"40\",\n          rows: \"2\",\n          onChange: handleInputChange,\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Rate this product:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-rating\",\n      children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: star <= rating ? 'star selected' : 'star',\n        onClick: () => handleStarClick(star),\n        children: \"\\u2605 \"\n      }, star, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleNewComments,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n_s(FavoriteColor, \"saw1JIa2FD605o0QufAW9jn/HPg=\");\n_c = FavoriteColor;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nalert(typeof root);\nroot.render( /*#__PURE__*/_jsxDEV(FavoriteColor, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"FavoriteColor\");","map":{"version":3,"names":["React","ReactDOM","useState","useEffect","axios","jsxDEV","_jsxDEV","FavoriteColor","_s","createfeed","comments","rating","feed","inputValue","setInputValue","inputValues","setInputValues","setRating","apiUrlGet","fetchData","alert","get","then","response","data","json","catch","error","console","handleStarClick","selectedRating","handleNewComments","prevItems","handleInputChange","event","target","value","renderStars","numStars","starSymbol","stars","repeat","children","map","x","index","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","cols","rows","onChange","star","onClick","type","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/Users/shulinzhang/my-react-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState,useEffect } from 'react';\nimport axios from 'axios'\nimport './mySurvey.css'\n\nfunction FavoriteColor() {\n    const createfeed= (comments,rating) =>{\n        const feed={comments: comments,\n        rating: rating\n    }\n    return feed;\n\n    };\n    const [inputValue, setInputValue] = useState('');\n    const [inputValues, setInputValues] = useState([]);\n    const [rating, setRating] = useState(0);\n\n     // Define the API URL you want to fetch data from\n    const apiUrlGet = 'http://localhost:3500/getRating';\n\n  // Define a function to fetch and update the data\n    const fetchData = async () => {\n      alert(\"effct triggered now\");\n      axios.get(apiUrlGet).then(response=>{\n      const data = response.json();\n      setInputValues(data);\n      }).catch (error=> {\n        console.error('Error fetching data:', error);\n      })\n\n  };\n\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n\n\n    const handleStarClick = (selectedRating) => {\n        alert(\"rating\"+selectedRating);\n        setRating(selectedRating);\n      };\n    const handleNewComments = ()=> {\n        var feed = createfeed(inputValue,rating);\n        setInputValues((prevItems) => [...prevItems, feed]);\n        setInputValue('');\n        setRating(0);\n    }  \n    const handleInputChange = (event) => {\n        setInputValue(event.target.value); // Update the state with the input value\n      };\n      const renderStars = (numStars) => {\n        const starSymbol = '★'; // Unicode star character\n        const stars = starSymbol.repeat(numStars);\n        return stars;\n      };\n\n\n    return (\n      <div>\n        {inputValues.map((x, index) => (\n          <h1 key={index}><span className='star selected'>{renderStars(x.rating)}</span>{x.comments}</h1>\n        ))}\n        \n        <form onSubmit={handleNewComments}>\n            <label>Enter your comments:<br/>\n            <textarea cols='40' rows='2'\n            onChange={handleInputChange} value={inputValue}\n            />\n            </label>\n        </form>\n        <p>Rate this product:</p>\n        <div className=\"star-rating\">\n        {[1, 2, 3, 4, 5].map((star) => (\n          <span\n            key={star}\n            className={star <= rating ? 'star selected' : 'star'}\n            onClick={() => handleStarClick(star)}\n          >\n            &#9733; {/* Unicode star character */}\n          </span>\n        ))}\n      </div>\n        <button\n          type=\"button\"\n          onClick={handleNewComments}\n        >Submit</button>\n      </div>\n    );\n  }\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nalert(typeof(root));\nroot.render(<FavoriteColor />);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}