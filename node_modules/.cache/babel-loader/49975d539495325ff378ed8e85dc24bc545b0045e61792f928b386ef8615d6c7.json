{"ast":null,"code":"var _jsxFileName = \"/Users/shulinzhang/my-react-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './mySurvey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar avgRating = 0;\nfunction FavoriteColor() {\n  _s();\n  const createfeed = (comments, rating) => {\n    const feed = {\n      comments: comments,\n      rating: rating\n    };\n    return feed;\n  };\n  const [inputValue, setInputValue] = useState('');\n  const [inputValues, setInputValues] = useState([]);\n  const [rating, setRating] = useState(0);\n\n  // Define the API URL you want to fetch data from\n\n  // Define a function to fetch and update the data\n  async function postRating(data) {\n    const apiUrl = 'http://localhost:3500/insertRating';\n    try {\n      const response = await axios.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Handle the response as needed\n      console.log('Data inserted:', response.data);\n    } catch (error) {\n      console.error('Error inserting data:', error);\n    }\n  }\n  const fetchData = async () => {\n    //   alert(\"effct triggered now\");\n    return fetch('http://localhost:3500/getRating').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      const feeds = data.map(element => createfeed(element.comments, element.rating));\n      const totalRating = feeds.reduce((accumulator, feed) => accumulator + feed.rating, 0);\n      avgRating = Math.round(totalRating / feeds.length * 100) / 100;\n      alert(avgRating);\n      setInputValues(() => [...feeds]);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n  const handleStarClick = selectedRating => {\n    setRating(selectedRating);\n  };\n  const handleNewComments = () => {\n    const totalRating = inputValues.reduce((accumulator, x) => accumulator + x.rating, 0);\n    avgRating = Math.round((totalRating + rating) / (inputValues.length + 1) * 100) / 100;\n    alert(avgRating);\n    const feed = createfeed(inputValue, rating);\n    setInputValues(prevItems => [...prevItems, feed]);\n    const data = {\n      comments: inputValue,\n      rating: rating\n    };\n    const jsonData = JSON.stringify(data);\n    alert(jsonData);\n    postRating(jsonData);\n    setInputValue('');\n    setRating(0);\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value); // Update the state with the input value\n  };\n\n  const renderStars = numStars => {\n    const starSymbol = 'â˜…'; // Unicode star character\n    const stars = starSymbol.repeat(numStars);\n    return stars;\n  };\n  const partialStyle = {\n    WebkitBackgroundClip: text,\n    color: transparent,\n    background: \"linear-gradient(90deg, red 0%, red {100*(avgRating-parseInt(avgRating))}%, gray {100*(avgRating-parseInt(avgRating))}%, gray 100%)\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [inputValues.map((x, index) => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"star selected\",\n        children: renderStars(x.rating)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }, this), x.comments]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNewComments,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter your comments:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          cols: \"40\",\n          rows: \"2\",\n          onChange: handleInputChange,\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rate this product:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: avgRating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"star selected\",\n        children: renderStars(parseInt(avgRating))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: \"\",\n      children: \"\\u2605\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-rating\",\n      children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: star <= rating ? 'star selected' : 'star',\n        onClick: () => handleStarClick(star),\n        children: \"\\u2605 \"\n      }, star, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleNewComments,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 7\n  }, this);\n}\n_s(FavoriteColor, \"saw1JIa2FD605o0QufAW9jn/HPg=\");\n_c = FavoriteColor;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n//alert(typeof(root));\nroot.render( /*#__PURE__*/_jsxDEV(FavoriteColor, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 143,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"FavoriteColor\");","map":{"version":3,"names":["React","ReactDOM","useState","useEffect","axios","jsxDEV","_jsxDEV","avgRating","FavoriteColor","_s","createfeed","comments","rating","feed","inputValue","setInputValue","inputValues","setInputValues","setRating","postRating","data","apiUrl","response","post","headers","console","log","error","fetchData","fetch","then","ok","Error","json","feeds","map","element","totalRating","reduce","accumulator","Math","round","length","alert","catch","handleStarClick","selectedRating","handleNewComments","x","prevItems","jsonData","JSON","stringify","handleInputChange","event","target","value","renderStars","numStars","starSymbol","stars","repeat","partialStyle","WebkitBackgroundClip","text","color","transparent","background","children","index","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","cols","rows","onChange","parseInt","style","star","onClick","type","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/Users/shulinzhang/my-react-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState,useEffect } from 'react';\nimport axios from 'axios'\nimport './mySurvey.css'\n\nvar avgRating = 0;\n\nfunction FavoriteColor() {\n    const createfeed= (comments,rating) =>{\n        const feed={comments: comments,\n        rating: rating\n    }\n    return feed;\n\n    };\n    const [inputValue, setInputValue] = useState('');\n    const [inputValues, setInputValues] = useState([]);\n    const [rating, setRating] = useState(0);\n\n     // Define the API URL you want to fetch data from\n\n  // Define a function to fetch and update the data\n  async function postRating(data) {\n    const apiUrl = 'http://localhost:3500/insertRating';\n  \n    try {\n      const response = await axios.post(apiUrl, data,{\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n  \n      // Handle the response as needed\n      console.log('Data inserted:', response.data);\n    } catch (error) {\n      console.error('Error inserting data:', error);\n    }\n  }\n    const fetchData = async () => {\n   //   alert(\"effct triggered now\");\n    return fetch('http://localhost:3500/getRating')\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n \n    return response.json();\n  })\n  .then(data => {\n    const feeds = data.map(element => createfeed(element.comments,element.rating));\n    const totalRating=feeds.reduce((accumulator, feed) => accumulator + feed.rating, 0);\n    \n    avgRating = Math.round((totalRating ) / (feeds.length) * 100) / 100;\n    alert(avgRating);\n    setInputValues(() => [...feeds]);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n      \n\n  };\n\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n\n\n    const handleStarClick = (selectedRating) => {\n        setRating(selectedRating);\n      };\n    const handleNewComments = ()=> {\n        const totalRating=inputValues.reduce((accumulator, x) => accumulator + x.rating, 0);\n        avgRating = Math.round((totalRating + rating) / (inputValues.length + 1) * 100) / 100;\n        alert(avgRating);\n        const feed = createfeed(inputValue,rating);\n        setInputValues((prevItems) => [...prevItems, feed]);\n        const data = {\n          comments: inputValue,\n          rating: rating\n        };\n        const jsonData = JSON.stringify(data);\n        alert(jsonData);\n        postRating(jsonData);\n        setInputValue('');\n        setRating(0);\n    }  \n    const handleInputChange = (event) => {\n        setInputValue(event.target.value); // Update the state with the input value\n      };\n      const renderStars = (numStars) => {\n        const starSymbol = 'â˜…'; // Unicode star character\n        const stars = starSymbol.repeat(numStars);\n        return stars;\n      };\n      \n      const partialStyle = {\n        WebkitBackgroundClip:text,\n        color: transparent,\n        background: \"linear-gradient(90deg, red 0%, red {100*(avgRating-parseInt(avgRating))}%, gray {100*(avgRating-parseInt(avgRating))}%, gray 100%)\"\n        \n      };\n\n    return (\n      <div>\n        {inputValues.map((x, index) => (\n          <h1 key={index}><span className='star selected'>{renderStars(x.rating)}</span>{x.comments}</h1>\n        ))}\n   \n\n        <form onSubmit={handleNewComments}>\n            <label>Enter your comments:<br/>\n            <textarea cols='40' rows='2'\n            onChange={handleInputChange} value={inputValue}\n            />\n            </label>\n        </form>\n        <p>Rate this product:<span>{avgRating}</span>\n        <span className='star selected'>{renderStars(parseInt(avgRating))}</span></p>\n        <span style=\"\">&#9733;</span>\n        <div className=\"star-rating\">\n        {[1, 2, 3, 4, 5].map((star) => (\n          <span\n            key={star}\n            className={star <= rating ? 'star selected' : 'star'}\n            onClick={() => handleStarClick(star)}\n          >\n            &#9733; {/* Unicode star character */}\n          </span>\n        ))}\n      </div>\n        <button\n          type=\"button\"\n          onClick={handleNewComments}\n        >Submit</button>\n      </div>\n    );\n  }\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n//alert(typeof(root));\nroot.render(<FavoriteColor />);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}